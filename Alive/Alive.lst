     1                                  ; Alive.asm
     2                                  section .data
     3 00000000 48656C6C6F2C20576F-         msg1        db  "Hello, World!", 10, 0      ; String with NL and NULL ternimated byte. db = Define BYTE
     3 00000009 726C64210A00       
     4                                      msg1Length  equ $-msg1-1    ; $ = current address
     5                                                                  ; $-msg1 = current address - msg1 address (this statement calculates the length of msg1)
     6                                  
     7 0000000F 416C69766520616E64-         msg2        db  "Alive and Kicking!", 10, 0 ; Another string
     7 00000018 204B69636B696E6721-
     7 00000021 0A00               
     8                                      msg2Length  equ $-msg2-1
     9 00000023 6501000000000000            radius      dq  357     ; dq = define QWORD (64 bits)
    10 0000002B 1F85EB51B81E0940            pi          dq  3.14    
    11                                  
    12                                  section .text
    13                                      global main
    14                                  main:
    15 00000000 55                          push    rbp         ; function prologue
    16 00000001 4889E5                      mov     rbp, rsp    ; function prologue
    17                                      
    18                                      ; setting up the Write syscall
    19 00000004 B801000000                  mov     rax, 1      ; sycall number
    20 00000009 BF01000000                  mov     rdi, 1      ; fd stdout
    21 0000000E 48BE-                       mov     rsi, msg1   ; string to display
    21 00000010 [0000000000000000] 
    22 00000018 BA0E000000                  mov     rdx, msg1Length ; string length
    23 0000001D 0F05                        syscall
    24                                  
    25                                      ; setting up to print the 2nd string
    26 0000001F B801000000                  mov     rax, 1
    27 00000024 BF01000000                  mov     rdi, 1
    28 00000029 48BE-                       mov     rsi, msg2
    28 0000002B [0F00000000000000] 
    29 00000033 BA13000000                  mov     rdx, msg2Length
    30 00000038 0F05                        syscall
    31                                  
    32 0000003A 4889EC                      mov     rsp, rbp    ; function epilogue
    33 0000003D 5D                          pop     rbp         ; function epilogue
    34                                  
    35                                      ; Exit syscall
    36 0000003E B83C000000                  mov     rax, 60
    37 00000043 BF00000000                  mov     rdi, 0
    38 00000048 0F05                        syscall
